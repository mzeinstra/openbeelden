FORMAT: 1A
HOST: http://www.openbeelden.nl

# openbeelden
This is a design for the Open Beelden API to guide the development process. It does not reflect the eventual Open Beelden API.

# Group Media
Most of these can be done by the current API of the S3 store
## Media [/media]
### List all Media [GET]
+ Response 200 (application/json)

        []

### Upload Media [POST]
+ Request (application/json)

        { 
            User : [
                userDetails: "..."
            ]
            
            metadata : [
                title: "",
                alternative: "",
                subject: "",
                description: "",
                abstract: "",
                publisher: "",
                contributor: ["",""],
                date: "",
                type: "",
                extent: "",
                media: "",
                identifier: "",
                source: "",
                language: "",
                references: "",
                spatial: ["",""],
                attributionName: "",
                attributionURL: "",
                license: ""
            ]
        }

+ Response 201 (application/json)

        {
            Status: "Success"
            MediaId: ""
        }

+ Response 400 (application/json)

        {
            Status: "Error occured"
        }

#Group Individual Media Items

## Media/{id} [/media/{id}]
### Get individual Media record [GET]
+ Response 200 (application/json)
    
        []

### Update individual Media Record [PUT]
+ Request (application/json)

        { 
            User : [
                userDetails: "..."
            ]
                
            Metadata : [
                title: "",
                alternative: "",
                subject: "",
                description: "",
                abstract: "",
                publisher: "",
                contributor: ["",""],
                date: "",
                type: "",
                extent: "",
                media: "",
                identifier: "",
                source: "",
                language: "",
                references: "",
                spatial: ["",""],
                attributionName: "",
                attributionURL: "",
                license: ""
            ]
        }
+ Response 201 (application/json)

        {
            Status: "Success"
            MediaId: ""
        }

+ Response 400 (application/json)

        {
            Status: "Error occured"
        }

### Delete individual Media Record [DELETE]
+ Request (application/json)

        { 
            User : [
                userDetails: "..."
            ]
                
            Metadata : [
                mediaId: ""
            ]
        }
+ Response 201 (application/json)

        {
            Status: "Success"
            MediaId: ""
        }

+ Response 400 (application/json)

        {
            Status: "Error occured"
        }
#Group User

## User [/user]

### Get all users [GET]
+ request (application/json)

+ Response 200 (vnd.collection+json)

        {
            "collection": {
                "version": "1.0",
                "href": "http://www.openbeelden.nl/api/users/",
                "items": [
                    {
                        "href": "http://www.openbeelden.nl/users/1/",
                        "data": [
                            {
                                "user": "author",
                                "value": "John Snow",
                                "prompt": "Author"
                            },
                        ]
                    }
                }
        }

### Create a new user [POST]

## Get individual User  [/user/{id}]

### Get user details [GET]

### Update user details [PUT]

### Delete user [DELETE]

## User Rights

### Get user Rights [GET]

### Update user rights [DELETE]

#Group Playlists
Playlist are created by users or by managers (for portals and APIs)

## Playlists [/user/{user_id}/playlist]

### Get all playlist from a particular user [GET]

### Create new playlist for a individual user [POST]

### Update a pla

## Individual Playlists [/user/{user_Id}/playlist/{playlis_id}]
